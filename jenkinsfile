import groovy.json.JsonOutput;
import groovy.json.JsonSlurper;

// Define parameters
def downloadSpec
def uploadSpec

pipeline {
    environment {
        MODE = "playground"
    }
    agent any
    stages {
        stage('build') {
            steps {
                echo "build stage"
                script {
                    println "Just for checking - print environment variable:"
                    println "env MODE inside script = " + env.MODE
                }
                echo "env MODE outside script = ${env.MODE}"
                echo "env MODE outside script = $MODE"
                sh 'echo inside sh "MODE is $MODE"'
                echo "parameter DEST = $DEST"
                
                
                echo "running python script that builds the data file:"
                sh 'python createFileSpec.py $DEST'
                echo "checking the result:"
                sh 'cat data_file2.json'
                script {
                    echo "running artifactory actions:"
                    downloadSpec = readFile 'data_file2.json'
                    println "downloadSpec = " + downloadSpec
    				def server = Artifactory.newServer url: 'https://ittai.jfrog.io/ittai/', username: 'admin', password: '4LmWr0KWRT'
    				server.download(downloadSpec)
    				
    				uploadSpec = """{
                        "files": [
                            {
                              "pattern": "createFileSpec.py",
                              "target": "libs-release-local/zipFiles/createFileSpec.py"
                            }
                        ]
                    }"""
                    server.upload(uploadSpec)
                }
            }
        }
        stage('test') {
            steps {
                sh 'whoami'
            }
        }
        stage('deploy') {
            steps {
                sh 'echo deploy stage'
				//sh 'sudo docker run -d -p 80:80 ittaihurvitz/simple-container-ittai:1.0'
				//sh 'sudo docker run -d -p 80:80 simple-container-jenkins3'
            }
        }
    }
}