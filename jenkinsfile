import groovy.json.JsonOutput;
import groovy.json.JsonSlurper;

pipeline {
    agent any
    stages {
        stage('build') {
            steps {
                sh 'echo build stage'
                sh 'python testPython.py'
                sh 'cat data_file2.json'
                script{
                    
                    def defaultDownloadSpec =  """{
    					"files": [
    						{
    						  "pattern": "libs-release-local/zipFiles/*.txt",
    						  "target": "./testing2/"
    						}
    					]
    				}"""
    				println defaultDownloadSpec
    				
    				//def jsonSlurper = new JsonSlurper()
    				//def object = JsonSlurper.parseText(defaultDownloadSpec)
    				//println object.files
    				
    				//def object = JsonSlurper.parseText '''
                    //    { "simple": 123,
                    //    "fraction": 123.66,
                    //    "exponential": 123e12
                    //    }'''
                    
                    //String fileContents = new File('data_file2.json').text
                    //println "Read from file = " + fileContents
    				
                    def currentFolder = "testing2"
    				println "test groovy. currentFolder = " + currentFolder
    				
    				def server = Artifactory.newServer url: 'https://ittai.jfrog.io/ittai/', username: 'admin', password: '4LmWr0KWRT'
    				
    				def downloadSpec = """{
    					"files": [
    						{
    						  "pattern": "libs-release-local/zipFiles/*.txt",
    						  "target": "./testing2/"
    						}
    					]
    				}"""
    				
    				//def downloadSpec = JsonOutput.toJson(object)
    				
    				server.download(downloadSpec)
                }
            }
        }
        stage('test') {
            steps {
                sh 'whoami'
            }
        }
        stage('deploy') {
            steps {
                sh 'echo deploy stage'
				//sh 'sudo docker run -d -p 80:80 ittaihurvitz/simple-container-ittai:1.0'
				//sh 'sudo docker run -d -p 80:80 simple-container-jenkins3'
            }
        }
    }
}